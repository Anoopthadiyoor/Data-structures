#include <stdio.h>
#include <stdlib.h>

int i, j, k, a, b, u, v, ne = 1, n;
int parent[25], adj[25][25], min, mincost = 0;

int find(int i)
{
    while (parent[i])
        i = parent[i];
    return i;
}

int uni(int i, int j) 
{
    if (i != j) {
        parent[j] = i;
        return 1;
    }
    return 0;
}

int main() {
    printf("Enter the number of vertices: \n");
    scanf("%d", &n);
    printf("Enter the cost of adjacency matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &adj[i][j]);
            if (adj[i][j] == 0) {
                adj[i][j] = 999;
            }
        }
    }

    printf("Edges of the minimum cost spanning tree are:\n");
    while (ne < n) {
        for (i = 0, min = 999; i < n; i++) {
            for (j = 0; j < n; j++) {
                if (adj[i][j] < min) {
                    min = adj[i][j];
                    a = u = i;
                    b = j;
                }
            }
        }
        u = find(a);
        v = find(b);
        if (uni(u, v)) {
            printf("%d edge (%d,%d) = %d\n", ne++, a, b, min);
            mincost += min;
        }
        adj[a][b] = adj[b][a] = 999; // Mark the edge as processed
    }
    printf("\nMinimum cost is %d\n", mincost);

return 0;
}
