#include <stdio.h>
#define SIZE 5  // Define the maximum size of the queue

int circularQueue[SIZE];
int front = -1;
int rear = -1;

// Function to insert an element in the queue
void insert(int value) {
    if ((front == 0 && rear == SIZE - 1) || (rear == (front - 1) % (SIZE - 1))) {
        printf("Queue is Full\n");
    } else {
        if (front == -1) {  // First element being inserted
            front = rear = 0;
        } else if (rear == SIZE - 1 && front != 0) {  // Wrap around
            rear = 0;
        } else {
            rear++;
        }
        circularQueue[rear] = value;
        printf("Inserted %d\n", value);
    }
}

// Function to delete an element from the queue
void delete() {
    if (front == -1) {
        printf("Queue is Empty\n");
    } else {
        printf("Deleted %d\n", circularQueue[front]);
        if (front == rear) {  // Queue has only one element
            front = rear = -1;
        } else if (front == SIZE - 1) {  // Wrap around
            front = 0;
        } else {
            front++;
        }
    }
}

// Function to display the elements of the queue
void display() {
    if (front == -1) {
        printf("Queue is Empty\n");
        return;
    }
    printf("Queue elements are: ");
    if (rear >= front) {
        for (int i = front; i <= rear; i++) {
            printf("%d ", circularQueue[i]);
        }
    } else {
        for (int i = front; i < SIZE; i++) {
            printf("%d ", circularQueue[i]);
        }
        for (int i = 0; i <= rear; i++) {
            printf("%d ", circularQueue[i]);
        }
    }
    printf("\n");
}

int main() {
    int choice, value;
    while (1) {
        printf("\nCircular Queue Operations:\n");
        printf("1. Insert\n");
        printf("2. Delete\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the value to insert: ");
                scanf("%d", &value);
                insert(value);
                break;
            case 2:
                delete();
                break;
            case 3: 
                display();
                break;
            case 4:printf("Exited...");
                return 0;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }
}
